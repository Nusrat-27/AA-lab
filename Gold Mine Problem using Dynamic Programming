#include <stdio.h>
#include <stdlib.h>
void display(int row, int col, int** arry1, int res, int pos_row, int pos_col) {
printf("-----------------------------------------\n");
for (int i = 0; i < row; i++) {
for (int j = 0; j < col; j++) {
printf("%d\t", arry1[i][j]);
}
printf("\n");
}
printf("Result: %d\n", res);
printf("Position of this value: row = %d, col = %d\n", pos_row, pos_col);
}
void gold_mine_dp(int row, int col, int** arry) {
int res = 0, pos_row, pos_col;
int** arry2 = (int**)malloc(row * sizeof(int*));
for (int i = 0; i < row; i++) {
arry2[i] = (int*)malloc(col * sizeof(int));
}
for (int i = 0; i < col; i++) {
for (int j = 0; j < row; j++) {
if (i == 0) {
arry2[j][i] = arry[j][i];
} else {
if (j == 0) {
arry2[j][i] = arry[j][i] + ((arry2[j + 1][i - 1] > arry2[j][i - 1]) ? arry2[j + 1][i - 1] : arry2[j][i -
1]);
} else if (j == row - 1) {
arry2[j][i] = arry[j][i] + ((arry2[j - 1][i - 1] > arry2[j][i - 1]) ? arry2[j - 1][i - 1] : arry2[j][i -
1]);
} else {
int temp = (arry2[j - 1][i - 1] > arry2[j][i - 1]) ? arry2[j - 1][i - 1] : arry2[j][i - 1];
arry2[j][i] = arry[j][i] + ((temp > arry2[j + 1][i - 1]) ? temp : arry2[j + 1][i - 1]);
}
}
if (i == col - 1) {
if (res < arry2[j][i]) {
res = arry2[j][i];
pos_row = i + 1;
pos_col = j + 1;
}
}
}
}
display(row, col, arry2, res, pos_col, pos_row);
for (int i = 0; i < row; i++) {
free(arry2[i]);
}
free(arry2);
}
int main() {
int row, col;
printf("Input the number of row: ");
scanf("%d", &row);
printf("Input the number of column: ");
scanf("%d", &col);
int** arry = (int**)malloc(row * sizeof(int*));
for (int i = 0; i < row; i++) {
arry[i] = (int*)malloc(col * sizeof(int));
}
printf("Input Matrix: ");
for (int i = 0; i < row; i++) {
for (int j = 0; j < col; j++) {
int temp;
scanf("%d", &temp);
arry[i][j] = temp;
}
}
gold_mine_dp(row, col, arry);
for (int i = 0; i < row; i++) {
free(arry[i]);
}
free(arry);
return 0;
}
